{"version":3,"sources":["Components/NameTag/NameForm.js","Components/NameTag/ColorForm.js","Components/NameTag/Form.js","Components/NameTag/Header.js","Components/NameTag/Hero.js","Components/NameTag/HeroContainer.js","App.js","reportWebVitals.js","index.js"],"names":["NameForm","handleSubmit","setNameValue","nameValue","secretIDValue","setSecretIDValue","handleAdd","className","onSubmit","type","onChange","e","target","value","placeholder","disabled","onClick","ColorForm","primaryColor","setPrimaryColor","secondaryColor","setSecondaryColor","nameColor","setNameColor","id","name","htmlFor","Form","addHero","heroes","addColor","useState","bgStyle","background","color","preventDefault","secretID","Header","Hero","hero","revealHero","index","removeHero","style","isHardCoded","isRevealed","HeroContainer","map","App","setHeroes","setData","useEffect","axios","get","heroData","then","response","heroNames","data","catch","error","console","log","length","newHeroes","splice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bf04b5a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function NameForm({ handleSubmit, setNameValue, nameValue, secretIDValue, setSecretIDValue, handleAdd }){\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-container-form\">\r\n                    <input \r\n                        type=\"text\"\r\n                        onChange={e => setNameValue(e.target.value)}\r\n                        value={nameValue}\r\n                        placeholder=\"Enter Hero Name\"\r\n                        />\r\n                    <input \r\n                        type=\"text\"\r\n                        onChange={e => setSecretIDValue(e.target.value)}\r\n                        value={secretIDValue}\r\n                        placeholder=\"Enter Secret ID\"\r\n                        />\r\n                </div>\r\n                <button disabled={!nameValue || !secretIDValue} onClick={() => handleAdd}>Add Hero</button>\r\n            </form>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../style.css'\r\n\r\nexport default function ColorForm( {primaryColor, setPrimaryColor, secondaryColor, setSecondaryColor, nameColor, setNameColor}){\r\n    \r\n    return (\r\n    <div className=\"color-form-container\">\r\n        <p>Choose your hero's colors:</p>\r\n\r\n        <div className=\"color-form-input\">\r\n            <input \r\n                type=\"color\" \r\n                id=\"primary-color\" \r\n                name=\"primary\" \r\n                value={primaryColor}\r\n                onChange={e => setPrimaryColor(e.target.value)} \r\n                />\r\n            <label htmlFor=\"primary\">Primary color</label>\r\n            \r\n            <input \r\n                type=\"color\" \r\n                id=\"secondary-color\" \r\n                name=\"secondary\" \r\n                value={secondaryColor}\r\n                onChange={e => setSecondaryColor(e.target.value)}/>\r\n            <label htmlFor=\"secondary\">Secondary color</label>\r\n\r\n        </div>\r\n\r\n        <select value={nameColor} onChange={e => setNameColor(e.target.value)}>\r\n                <option value=\"\">-- Select the color of your hero name --  </option>\r\n                <option value=\"black\">Black</option>\r\n                <option value=\"white\">White</option>\r\n        </select>\r\n    </div>\r\n    )\r\n}","import React, { useState }from 'react'\r\nimport NameForm from './NameForm'\r\nimport ColorForm from './ColorForm'\r\nimport '../style.css'\r\n\r\nfunction Form({addHero, heroes, primaryColor, secondaryColor, setPrimaryColor, setSecondaryColor, addColor, nameColor, setNameColor}){\r\n\r\n    const [ nameValue, setNameValue ] = useState(\"\")\r\n    const [ secretIDValue, setSecretIDValue ] = useState(\"\")\r\n\r\n    const bgStyle = {\r\n        background: `linear-gradient(130deg, ${primaryColor} 56.59%, ${secondaryColor} 57%)`,\r\n        color: `${nameColor}`\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(!nameValue) return\r\n        addHero(nameValue, secretIDValue, primaryColor, secondaryColor, bgStyle)\r\n        setNameValue(\"\")\r\n        setSecretIDValue(\"\")\r\n        setPrimaryColor(\"#000000\")\r\n        setSecondaryColor(\"#000000\")\r\n        setNameColor(\"\")\r\n    }\r\n\r\n    const handleAdd = (name, secretID) => {\r\n        addHero(nameValue, secretIDValue, primaryColor, secondaryColor, bgStyle)\r\n        if(!nameValue) return\r\n        setNameValue(\"\")\r\n        setSecretIDValue(\"\")\r\n        setPrimaryColor(\"#000000\")\r\n        setSecondaryColor(\"#000000\")\r\n        setNameColor('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n\r\n            <ColorForm \r\n                primaryColor={primaryColor}\r\n                setPrimaryColor={setPrimaryColor}\r\n                secondaryColor={secondaryColor}\r\n                setSecondaryColor={setSecondaryColor}\r\n                nameColor={nameColor}\r\n                setNameColor={setNameColor}\r\n            />\r\n\r\n            <NameForm\r\n                handleSubmit={handleSubmit}\r\n                nameValue={nameValue}\r\n                setNameValue={setNameValue}\r\n                secretIDValue={secretIDValue}\r\n                setSecretIDValue={setSecretIDValue}\r\n                handleAdd={handleAdd}\r\n            />\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n      \r\n    \r\n        \r\n            \r\n    \r\n\r\n\r\n\r\n\r\nexport default Form\r\n\r\n/* return (\r\n    <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-container-form\">\r\n                <input \r\n                    type=\"text\"\r\n                    onChange={e => setNameValue(e.target.value)}\r\n                    value={nameValue}\r\n                    placeholder=\"Enter Hero Name\"\r\n                    />\r\n                <input \r\n                    type=\"text\"\r\n                    onChange={e => setSecretIDValue(e.target.value)}\r\n                    value={secretIDValue}\r\n                    placeholder=\"Enter Secret ID\"\r\n                    />\r\n            </div>\r\n            <button onClick={() => handleAdd}>Add Hero</button>\r\n        </form>\r\n    </div> */","import React from 'react'\r\nimport '../style.css'\r\n\r\nfunction Header(){\r\n\r\n    return (\r\n        <header>\r\n            <h1>Customize Your Hero Tag</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Hero({hero, revealHero, index, removeHero}){\r\n\r\n    return (\r\n        <div className=\"hero\" style={ hero.isHardCoded ? hero.style : hero.bgStyle }>\r\n            { hero.isRevealed ? hero.secretID : hero.name}\r\n            <div className=\"button-container-hero\">\r\n                <button id=\"reveal-button\" onClick={() => revealHero(index)}>{hero.isRevealed ? \"Unreveal\" : \"Reveal\"}</button>\r\n                <button id=\"delete-button\" onClick={() => removeHero(index)}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hero","import React from 'react'\r\nimport Hero from './Hero';\r\n\r\nexport default function HeroContainer( {heroes, revealHero, removeHero, primaryColor, secondaryColor}){\r\n\r\n    return (\r\n        <div className=\"hero-container\">\r\n        {heroes.map((hero, index) => (\r\n          <Hero \r\n            key={index}\r\n            index={index}\r\n            hero={hero}\r\n            revealHero={revealHero}\r\n            removeHero={removeHero}\r\n            primaryColor={primaryColor}\r\n            secondaryColor={secondaryColor}\r\n            \r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport Form from './Components/NameTag/Form';\r\nimport Header from './Components/NameTag/Header';\r\nimport HeroContainer from './Components/NameTag/HeroContainer';\r\nimport HeroSearch from './Components/HeroSearch/HeroSearch';\r\nimport heroData from './data/all.json'\r\n\r\nimport axios from 'axios'; \r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App(){\r\n\r\n  const [ heroes, setHeroes ] = useState([\r\n\r\n    {\r\n      name: \"Batman\", \r\n      secretID: \"Bruce Wayne\",\r\n      isRevealed: false,\r\n      isHardCoded: true,\r\n      style: {\r\n        background: \"linear-gradient(130deg, black 56.59%, yellow 57%)\",\r\n        color: \"white\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Spider-Man\", \r\n      secretID: \"Peter Parker\",\r\n      isRevealed: false,\r\n      isHardCoded: true,\r\n      style: {\r\n        background: \"linear-gradient(130deg, red 56.59%, blue 57%)\",\r\n        color: \"white\",\r\n      },\r\n    },\r\n    {\r\n      name: \"Hulk\", \r\n      secretID: \"Eric Banner\",\r\n      isRevealed: false,\r\n      isHardCoded: true,\r\n      style: {\r\n        background: \"linear-gradient(130deg, green 56.59%, purple 57%)\",\r\n        color: \"white\",\r\n      },\r\n    },\r\n\r\n  ])\r\n\r\n  const [ primaryColor, setPrimaryColor ] = useState(\"#000000\")\r\n  const [ secondaryColor, setSecondaryColor ] = useState(\"#FFFF00\")\r\n  const [ nameColor, setNameColor ] = useState(\"\")\r\n\r\n  const addHero = (name, secretID, primaryColor, secondaryColor, bgStyle) => {\r\n    const newHeroes = [...heroes, {name, secretID, primaryColor, secondaryColor, bgStyle}]\r\n    setHeroes(newHeroes)\r\n    \r\n  }\r\n  \r\n  const revealHero = (index) => {\r\n    const newHeroes = [...heroes]\r\n\r\n    if(!newHeroes[index].isRevealed){\r\n      newHeroes[index].isRevealed = true\r\n      setHeroes(newHeroes)\r\n    } else {\r\n      newHeroes[index].isRevealed = false\r\n      setHeroes(newHeroes)\r\n    }\r\n\r\n    console.log(newHeroes[index])\r\n  }\r\n\r\n  const removeHero = (index) => {\r\n    const newHeroes = [...heroes]\r\n    newHeroes.splice(index, 1)\r\n    setHeroes(newHeroes)\r\n  }\r\n\r\n //Hero Search functions -----------------------------------------------------------------------\r\n/* \r\nconst URL = `https://akabab.github.io/superhero-api/api`\r\nconst proxyURL = \"https://cors-anywhere.herokuapp.com/\"\r\n */\r\n\r\n const [data, setData] = useState('')\r\n\r\nconst getHeroes = () => {\r\n  axios.get(heroData)\r\n  .then((response) => {\r\n    const heroNames = response.data.name\r\n    setData(heroNames)\r\n  })\r\n  .catch(error => console.log('Error'))\r\n}\r\n\r\nuseEffect(() => {\r\n  getHeroes()\r\n}, [])\r\n\r\n  return(\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      {heroes.length === 0 ? <p>Please enter a name.</p> : \r\n        <HeroContainer \r\n          heroes={heroes}\r\n          revealHero={revealHero}\r\n          removeHero={removeHero}\r\n          primaryColor={primaryColor}\r\n          secondaryColor={secondaryColor}\r\n      />}\r\n\r\n\r\n      <Form\r\n        addHero={addHero}\r\n        heroes={heroes}\r\n        primaryColor={primaryColor}\r\n        setPrimaryColor={setPrimaryColor}\r\n        secondaryColor={secondaryColor}\r\n        setSecondaryColor={setSecondaryColor}\r\n        nameColor={nameColor}\r\n        setNameColor={setNameColor}\r\n      />\r\n\r\n      {/* <HeroSearch \r\n      heroData={heroData}\r\n      /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}